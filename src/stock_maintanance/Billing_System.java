/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stock_maintanance;

import DB.Connections;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author karuna
 */
public class Billing_System extends javax.swing.JFrame {

    /**
     * Creates new form Billing_System
     */
    
    String[] col={"Product Name","Price per peice","GST","Qantity","Total Price"};
    DefaultTableModel dt;
  
    
    public Billing_System() {
        initComponents();
        getCategory();
        Number();
        dt=new DefaultTableModel(col,0);
        Table.setModel(dt);
        
        System.out.println("hi");
        
       
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        B_Calc = new javax.swing.JButton();
        lbl_Title = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        C_Category = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        txt_No_Stock = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_ppp = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        L_Total = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        txt_Quantity = new javax.swing.JSpinner();
        txt_Amount = new javax.swing.JTextField();
        B_AddtoCart = new javax.swing.JButton();
        B_Reset = new javax.swing.JButton();
        B_Print = new javax.swing.JButton();
        B_Exit = new javax.swing.JButton();
        B_Menu = new javax.swing.JButton();
        txt_Gst = new javax.swing.JTextField();
        Lb = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        C_Productname = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Billing Page");
        setBackground(new java.awt.Color(153, 153, 255));

        jLabel1.setText("Product :");

        B_Calc.setBackground(new java.awt.Color(255, 255, 255));
        B_Calc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/calculate-price.png"))); // NOI18N
        B_Calc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_CalcActionPerformed(evt);
            }
        });

        lbl_Title.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        lbl_Title.setText("BILLING SYSTEM");

        jLabel2.setText("Category :");

        C_Category.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        C_Category.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                C_CategoryItemStateChanged(evt);
            }
        });
        C_Category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C_CategoryActionPerformed(evt);
            }
        });

        jLabel3.setText("No.Of Stock Available :");

        txt_No_Stock.setEditable(false);
        txt_No_Stock.setBackground(new java.awt.Color(255, 255, 255));
        txt_No_Stock.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        jLabel4.setText("Price Per Peice :");

        txt_ppp.setEditable(false);
        txt_ppp.setBackground(new java.awt.Color(255, 255, 255));
        txt_ppp.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        jLabel5.setText("Quantity :");

        jLabel6.setText("GST Percentage :");

        L_Total.setText("Total Amont :");

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jScrollPane1.setViewportView(Table);

        txt_Quantity.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        txt_Quantity.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));

        B_AddtoCart.setBackground(new java.awt.Color(255, 255, 255));
        B_AddtoCart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/add-to-cart.png"))); // NOI18N
        B_AddtoCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_AddtoCartActionPerformed(evt);
            }
        });

        B_Reset.setBackground(new java.awt.Color(255, 255, 255));
        B_Reset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Reset.png"))); // NOI18N
        B_Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_ResetActionPerformed(evt);
            }
        });

        B_Print.setBackground(new java.awt.Color(255, 255, 255));
        B_Print.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Print.png"))); // NOI18N
        B_Print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_PrintActionPerformed(evt);
            }
        });

        B_Exit.setBackground(new java.awt.Color(255, 255, 255));
        B_Exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Emergency Exit.png"))); // NOI18N
        B_Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_ExitActionPerformed(evt);
            }
        });

        B_Menu.setBackground(new java.awt.Color(255, 255, 255));
        B_Menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/home.png"))); // NOI18N
        B_Menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_MenuActionPerformed(evt);
            }
        });

        txt_Gst.setEditable(false);
        txt_Gst.setBackground(new java.awt.Color(255, 255, 255));

        Lb.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        Lb.setText("0");

        jLabel7.setText("Bill No :");

        C_Productname.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                C_ProductnameItemStateChanged(evt);
            }
        });
        C_Productname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C_ProductnameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addComponent(L_Total)
                                    .addComponent(jLabel2)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel7)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txt_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(233, 233, 233))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txt_Amount)
                                        .addGap(46, 46, 46)))
                                .addComponent(B_Calc, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txt_Gst, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Lb, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(C_Productname, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txt_No_Stock)
                                .addComponent(C_Category, 0, 256, Short.MAX_VALUE)
                                .addComponent(txt_ppp))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(B_AddtoCart, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(124, 124, 124)
                        .addComponent(B_Reset, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 185, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 694, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(127, 127, 127)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(B_Exit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(B_Print, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(B_Menu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(141, 141, 141))
            .addGroup(layout.createSequentialGroup()
                .addGap(893, 893, 893)
                .addComponent(lbl_Title)
                .addGap(208, 593, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(B_Calc, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(359, 359, 359))
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Lb, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(C_Category, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                            .addComponent(C_Productname))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_No_Stock, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_ppp, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                            .addComponent(txt_Gst))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(L_Total, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_Amount, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE))
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(B_Reset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(B_AddtoCart, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE))
                        .addGap(208, 208, 208))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(B_Print, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105)
                        .addComponent(B_Menu, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 289, Short.MAX_VALUE)
                        .addComponent(B_Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(132, 132, 132))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_Title, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        setSize(new java.awt.Dimension(1918, 1097));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void B_CalcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_CalcActionPerformed
        // TODO add your handling code here:
        
        
        
        int PPP=Integer.parseInt(txt_ppp.getText());
        int GST=Integer.parseInt(txt_Gst.getText());
        int value = (Integer) txt_Quantity.getValue();
        
        int Gst_AddValue= PPP+(PPP*GST/100);
        
        int Total_Amount=Gst_AddValue*value;
        
        String Total=String.valueOf(Total_Amount);
        
        txt_Amount.setText(Total);
        
        
       
    }//GEN-LAST:event_B_CalcActionPerformed

    private void C_CategoryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_C_CategoryItemStateChanged
        // TODO add your handling code here: 
        C_Productname.removeAllItems();
        get_pname();
        
    }//GEN-LAST:event_C_CategoryItemStateChanged

    private void B_AddtoCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_AddtoCartActionPerformed
       
        
        
        
        String Product=C_Productname.getSelectedItem().toString();
        String PPP=txt_ppp.getText().toString();
        String GST=txt_Gst.getText().toString();
        String Qantity = txt_Quantity.getValue().toString();
        String Total=txt_Amount.getText().toString();
        
        String row[]={Product,PPP,GST+"%",Qantity,Total};
        
        dt.addRow(row);
        Billing();
        Stock_update();
        setReset();
        
    }//GEN-LAST:event_B_AddtoCartActionPerformed

    private void B_ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_ResetActionPerformed

        setReset();
        
    }//GEN-LAST:event_B_ResetActionPerformed

    private void B_MenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_MenuActionPerformed
        
        new Employee_Menu().setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_B_MenuActionPerformed

    private void B_ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_ExitActionPerformed
       
        System.exit(0);
    }//GEN-LAST:event_B_ExitActionPerformed

    private void B_PrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_PrintActionPerformed
          Report();
        
        
    }//GEN-LAST:event_B_PrintActionPerformed

    private void C_ProductnameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_C_ProductnameItemStateChanged
        
        AvailableStock();
        
    }//GEN-LAST:event_C_ProductnameItemStateChanged

    private void C_ProductnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C_ProductnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C_ProductnameActionPerformed

    private void C_CategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C_CategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C_CategoryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Billing_System.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Billing_System.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Billing_System.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Billing_System.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Billing_System().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton B_AddtoCart;
    private javax.swing.JButton B_Calc;
    private javax.swing.JButton B_Exit;
    private javax.swing.JButton B_Menu;
    private javax.swing.JButton B_Print;
    private javax.swing.JButton B_Reset;
    private javax.swing.JComboBox C_Category;
    private javax.swing.JComboBox C_Productname;
    private javax.swing.JLabel L_Total;
    private javax.swing.JLabel Lb;
    private javax.swing.JTable Table;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_Title;
    private javax.swing.JTextField txt_Amount;
    private javax.swing.JTextField txt_Gst;
    private javax.swing.JTextField txt_No_Stock;
    private javax.swing.JSpinner txt_Quantity;
    private javax.swing.JTextField txt_ppp;
    // End of variables declaration//GEN-END:variables


public void getCategory(){
        
        Connections Con=new Connections();
        
    
         Connection Conn;
         Statement stm;
         ResultSet rs;
    
        try{
        
            Conn=Con.getCon();
            stm=Conn.createStatement();
            rs=stm.executeQuery("Select * from Category;");
            
            while(rs.next()){
                
               String Category=rs.getString(2);
                
               C_Category.addItem(Category);
            }
            Conn.close();
            
        }
        catch(Exception e){}  
    }

 public void get_Category(){
     
     
     
        Connections Coon=new Connections();

        
       String  Cat=C_Category.getSelectedItem().toString();
        
        
        Connection Con;
        Statement Stm;
        ResultSet rs;
        
        System.out.print(Cat);
        try{
            String Query="select * from No_Stock where Category='"+ Cat +"';";
            System.out.println(Query);
            Con=Coon.getCon();
            Stm=Con.createStatement();
            rs=Stm.executeQuery(Query);
            
            while(rs.next()){
              String Product_Name=rs.getString("Product_Name");
              
              C_Productname.addItem(Product_Name);
              
              
            }
            System.out.println(Query);
            Con.close();
        }
        catch(Exception exe){
        
            System.out.print(exe);
            
        }
    
    }

 
 public void AvailableStock(){
    Connections Con=new Connections();
    Connection Conn;
    Statement stm;
    ResultSet rs;
    
    String Value=C_Productname.getSelectedItem().toString();
    
    try{
        
        Conn=Con.getCon();
        stm=Conn.createStatement();
        String Query="select * from No_Stock where Product_Name='"+Value+"'";
        rs=stm.executeQuery(Query);
        
        while(rs.next()){
            String ProductName=rs.getString("No_Stock");
            String GST=rs.getString("GST");
            String Price_PP=rs.getString("Price_PP");
            txt_No_Stock.setText(ProductName);
            txt_ppp.setText(Price_PP);
            txt_Gst.setText(GST);
        }
      Conn.close();
    }
    catch(Exception e){}
    
    
 
 }
 
 
 
 public void setReset(){
     
        txt_No_Stock.setText("");
        txt_ppp.setText("");
        txt_Quantity.setValue(1);
        txt_Gst.setText("");
        txt_Amount.setText("");
 }
 
 public void Number(){
      
     System.out.println("1");
     
     Connections Conne=new Connections();
     Connection Con;
     Statement stm;
     ResultSet rs;
     int Bill_No,no;
     try{
         
         Con=Conne.getCon();
         stm=Con.createStatement();
         rs=stm.executeQuery("select MAX(Bill_No) from Billing;" );
      
         while(rs.next()){
             System.out.println("3");
            String Bill_Num=rs.getString("MAX(Bill_No)");
           
             Bill_No=Integer.parseInt(Bill_Num);
             
             no=Bill_No+1;
             
             Lb.setText(String.valueOf(no));
         }
         
         
         Con.close();
         
     }
     catch(SQLException | NumberFormatException e){
     
         System.out.print(e);
     }
 

 }

 public void Billing(){
        String B_Product=C_Productname.getSelectedItem().toString();
        String B_PPP=txt_ppp.getText().toString();
        String B_GST=txt_Gst.getText().toString();
        String B_Quantity = txt_Quantity.getValue().toString();
        String B_Total=txt_Amount.getText().toString();
        String B_Bill_No=Lb.getText();
     
       Connections Con=new Connections();
       Connection Conn;
       Statement stm;
       try{
           Conn=Con.getCon();
           stm=Conn.createStatement();
           String Query="Insert into billing values("+B_Bill_No+",'"+B_Product+"','"+B_PPP+"','"+B_GST+"','"+B_Quantity+"','"+B_Total+"',curdate())";
           stm.execute(Query);
           System.out.println(Query);
           
           Conn.close();
       }
       catch(Exception e ){}
 }
 
 
 public void Stock_update(){
     
      String B_Product=C_Productname.getSelectedItem().toString();
      int B_Quantity = (Integer) txt_Quantity.getValue();
      int no_Quantity=Integer.parseInt(txt_No_Stock.getText());
      
      int Curr_Stock=no_Quantity - B_Quantity;
      
      Connections Conn=new Connections();
      Connection Con;
      Statement stm;
      
      try{
          Con=Conn.getCon();
          stm=Con.createStatement();
          stm.execute("update no_stock set No_Stock ="+Curr_Stock+"  where Product_Name='"+B_Product+"'; ");
          
          Con.close();
      
      }
      catch(Exception e){}
     
     
 }
 

public void Report(){
    Connections Conn=new Connections();
    Connection Con;
    
         try {

            Con=Conn.getCon() ;

            JasperDesign jd = JRXmlLoader.load("C:\\Users\\karuna\\Stock_Maintanance\\src\\stock_maintanance\\BILL_1.jrxml");
            String sql = "select * from billing where Bill_no='"+Lb.getText()+"';";
            System.out.print(sql);
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);
            jd.setQuery(newQuery);
            JasperReport jr = JasperCompileManager.compileReport(jd);
            JasperPrint jp = JasperFillManager.fillReport(jr, null, Con);
            JasperViewer.viewReport(jp, false);


        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
            e.printStackTrace();

        }
    }

public void get_pname(){
        
   
    String field_d=(String) C_Category.getSelectedItem();
    String name_f;
    int i=0;
    
       
       
      try{
     
       Connection con =Connections.getCon();
      
            String query="SELECT Product_Name FROM  No_Stock WHERE Category='"+field_d+"'";
          
        System.out.println(query +"this query from get_pname()");
       Statement stm=con.createStatement();
        ResultSet rs=stm.executeQuery(query);
         
        while(rs.next()){
            
            name_f=rs.getString("product_name");
           C_Productname.addItem(name_f);
            
           
            i++;
          
    
}
     
         
        con.close();
    }
    catch(Exception e){
        System.out.println(e+" this exception comes form quantiy_get_dao");
    
}
     
    }

}
